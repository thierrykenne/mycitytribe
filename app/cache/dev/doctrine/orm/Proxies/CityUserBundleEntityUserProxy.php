<?php

namespace Proxies;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class CityUserBundleEntityUserProxy extends \City\UserBundle\Entity\User implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }
    
    
    public function serialize()
    {
        $this->__load();
        return parent::serialize();
    }

    public function unserialize($data)
    {
        $this->__load();
        return parent::unserialize($data);
    }

    public function setResidenceTribe(\City\UserBundle\Entity\ResidenceTribe $residence_tribe)
    {
        $this->__load();
        return parent::setResidenceTribe($residence_tribe);
    }

    public function getResidenceTribe()
    {
        $this->__load();
        return parent::getResidenceTribe();
    }

    public function setDestinationTribe(\City\UserBundle\Entity\DestinationTribe $destination_tribe)
    {
        $this->__load();
        return parent::setDestinationTribe($destination_tribe);
    }

    public function getDestinationTribe()
    {
        $this->__load();
        return parent::getDestinationTribe();
    }

    public function setNationality($nationality)
    {
        $this->__load();
        return parent::setNationality($nationality);
    }

    public function getNationality()
    {
        $this->__load();
        return parent::getNationality();
    }

    public function setDestinationCity($destination_city)
    {
        $this->__load();
        return parent::setDestinationCity($destination_city);
    }

    public function getDestinationCity()
    {
        $this->__load();
        return parent::getDestinationCity();
    }

    public function setDestinationCountry($destination_country)
    {
        $this->__load();
        return parent::setDestinationCountry($destination_country);
    }

    public function getDestinationCountry()
    {
        $this->__load();
        return parent::getDestinationCountry();
    }

    public function setDestinationRegion($destination_region)
    {
        $this->__load();
        return parent::setDestinationRegion($destination_region);
    }

    public function getDestinationRegion()
    {
        $this->__load();
        return parent::getDestinationRegion();
    }

    public function setResidenceRegion($residence_region)
    {
        $this->__load();
        return parent::setResidenceRegion($residence_region);
    }

    public function getResidenceRegion()
    {
        $this->__load();
        return parent::getResidenceRegion();
    }

    public function setResidenceCity($residence_city)
    {
        $this->__load();
        return parent::setResidenceCity($residence_city);
    }

    public function getResidenceCity()
    {
        $this->__load();
        return parent::getResidenceCity();
    }

    public function setResidenceCountry($residence_country)
    {
        $this->__load();
        return parent::setResidenceCountry($residence_country);
    }

    public function getResidenceCountry()
    {
        $this->__load();
        return parent::getResidenceCountry();
    }

    public function setBirthYear($birthYear)
    {
        $this->__load();
        return parent::setBirthYear($birthYear);
    }

    public function getBirthYear()
    {
        $this->__load();
        return parent::getBirthYear();
    }

    public function setAboutMe($aboutMe)
    {
        $this->__load();
        return parent::setAboutMe($aboutMe);
    }

    public function getAboutMe()
    {
        $this->__load();
        return parent::getAboutMe();
    }

    public function setSex($sex)
    {
        $this->__load();
        return parent::setSex($sex);
    }

    public function getSex()
    {
        $this->__load();
        return parent::getSex();
    }

    public function setPremium($premium)
    {
        $this->__load();
        return parent::setPremium($premium);
    }

    public function getPremium()
    {
        $this->__load();
        return parent::getPremium();
    }

    public function setNumQuestion($numQuestion)
    {
        $this->__load();
        return parent::setNumQuestion($numQuestion);
    }

    public function getNumQuestion()
    {
        $this->__load();
        return parent::getNumQuestion();
    }

    public function setNumAnswer($numAnswer)
    {
        $this->__load();
        return parent::setNumAnswer($numAnswer);
    }

    public function getNumAnswer()
    {
        $this->__load();
        return parent::getNumAnswer();
    }

    public function setVisitGoal($visit_goal)
    {
        $this->__load();
        return parent::setVisitGoal($visit_goal);
    }

    public function getVisitGoal()
    {
        $this->__load();
        return parent::getVisitGoal();
    }

    public function setOccupation($occupation)
    {
        $this->__load();
        return parent::setOccupation($occupation);
    }

    public function getOccupation()
    {
        $this->__load();
        return parent::getOccupation();
    }

    public function getId()
    {
        $this->__load();
        return parent::getId();
    }

    public function setLanguage($language)
    {
        $this->__load();
        return parent::setLanguage($language);
    }

    public function getLanguage()
    {
        $this->__load();
        return parent::getLanguage();
    }

    public function setResidenceContinent($residenceContinent)
    {
        $this->__load();
        return parent::setResidenceContinent($residenceContinent);
    }

    public function getResidenceContinent()
    {
        $this->__load();
        return parent::getResidenceContinent();
    }

    public function setDestinationContinent($destinationContinent)
    {
        $this->__load();
        return parent::setDestinationContinent($destinationContinent);
    }

    public function getDestinationContinent()
    {
        $this->__load();
        return parent::getDestinationContinent();
    }

    public function setImage($image)
    {
        $this->__load();
        return parent::setImage($image);
    }

    public function getImage()
    {
        $this->__load();
        return parent::getImage();
    }

    public function setFacebookId($facebookId)
    {
        $this->__load();
        return parent::setFacebookId($facebookId);
    }

    public function getFacebookId()
    {
        $this->__load();
        return parent::getFacebookId();
    }

    public function setFBData($fbdata)
    {
        $this->__load();
        return parent::setFBData($fbdata);
    }

    public function addRole($role)
    {
        $this->__load();
        return parent::addRole($role);
    }

    public function equals(\Symfony\Component\Security\Core\User\UserInterface $user)
    {
        $this->__load();
        return parent::equals($user);
    }

    public function eraseCredentials()
    {
        $this->__load();
        return parent::eraseCredentials();
    }

    public function getUsername()
    {
        $this->__load();
        return parent::getUsername();
    }

    public function getUsernameCanonical()
    {
        $this->__load();
        return parent::getUsernameCanonical();
    }

    public function getSalt()
    {
        $this->__load();
        return parent::getSalt();
    }

    public function getEmail()
    {
        $this->__load();
        return parent::getEmail();
    }

    public function getEmailCanonical()
    {
        $this->__load();
        return parent::getEmailCanonical();
    }

    public function getPassword()
    {
        $this->__load();
        return parent::getPassword();
    }

    public function getPlainPassword()
    {
        $this->__load();
        return parent::getPlainPassword();
    }

    public function getLastLogin()
    {
        $this->__load();
        return parent::getLastLogin();
    }

    public function getConfirmationToken()
    {
        $this->__load();
        return parent::getConfirmationToken();
    }

    public function getRoles()
    {
        $this->__load();
        return parent::getRoles();
    }

    public function hasRole($role)
    {
        $this->__load();
        return parent::hasRole($role);
    }

    public function isAccountNonExpired()
    {
        $this->__load();
        return parent::isAccountNonExpired();
    }

    public function isAccountNonLocked()
    {
        $this->__load();
        return parent::isAccountNonLocked();
    }

    public function isCredentialsNonExpired()
    {
        $this->__load();
        return parent::isCredentialsNonExpired();
    }

    public function isCredentialsExpired()
    {
        $this->__load();
        return parent::isCredentialsExpired();
    }

    public function isEnabled()
    {
        $this->__load();
        return parent::isEnabled();
    }

    public function isExpired()
    {
        $this->__load();
        return parent::isExpired();
    }

    public function isLocked()
    {
        $this->__load();
        return parent::isLocked();
    }

    public function isSuperAdmin()
    {
        $this->__load();
        return parent::isSuperAdmin();
    }

    public function isUser(\FOS\UserBundle\Model\UserInterface $user = NULL)
    {
        $this->__load();
        return parent::isUser($user);
    }

    public function removeRole($role)
    {
        $this->__load();
        return parent::removeRole($role);
    }

    public function setUsername($username)
    {
        $this->__load();
        return parent::setUsername($username);
    }

    public function setUsernameCanonical($usernameCanonical)
    {
        $this->__load();
        return parent::setUsernameCanonical($usernameCanonical);
    }

    public function setCredentialsExpireAt(\DateTime $date)
    {
        $this->__load();
        return parent::setCredentialsExpireAt($date);
    }

    public function setCredentialsExpired($boolean)
    {
        $this->__load();
        return parent::setCredentialsExpired($boolean);
    }

    public function setEmail($email)
    {
        $this->__load();
        return parent::setEmail($email);
    }

    public function setEmailCanonical($emailCanonical)
    {
        $this->__load();
        return parent::setEmailCanonical($emailCanonical);
    }

    public function setEnabled($boolean)
    {
        $this->__load();
        return parent::setEnabled($boolean);
    }

    public function setExpired($boolean)
    {
        $this->__load();
        return parent::setExpired($boolean);
    }

    public function setExpiresAt(\DateTime $date)
    {
        $this->__load();
        return parent::setExpiresAt($date);
    }

    public function setPassword($password)
    {
        $this->__load();
        return parent::setPassword($password);
    }

    public function setSuperAdmin($boolean)
    {
        $this->__load();
        return parent::setSuperAdmin($boolean);
    }

    public function setPlainPassword($password)
    {
        $this->__load();
        return parent::setPlainPassword($password);
    }

    public function setLastLogin(\DateTime $time)
    {
        $this->__load();
        return parent::setLastLogin($time);
    }

    public function setLocked($boolean)
    {
        $this->__load();
        return parent::setLocked($boolean);
    }

    public function setConfirmationToken($confirmationToken)
    {
        $this->__load();
        return parent::setConfirmationToken($confirmationToken);
    }

    public function setPasswordRequestedAt(\DateTime $date)
    {
        $this->__load();
        return parent::setPasswordRequestedAt($date);
    }

    public function getPasswordRequestedAt()
    {
        $this->__load();
        return parent::getPasswordRequestedAt();
    }

    public function isPasswordRequestNonExpired($ttl)
    {
        $this->__load();
        return parent::isPasswordRequestNonExpired($ttl);
    }

    public function generateConfirmationToken()
    {
        $this->__load();
        return parent::generateConfirmationToken();
    }

    public function setRoles(array $roles)
    {
        $this->__load();
        return parent::setRoles($roles);
    }

    public function getGroups()
    {
        $this->__load();
        return parent::getGroups();
    }

    public function getGroupNames()
    {
        $this->__load();
        return parent::getGroupNames();
    }

    public function hasGroup($name)
    {
        $this->__load();
        return parent::hasGroup($name);
    }

    public function addGroup(\FOS\UserBundle\Model\GroupInterface $group)
    {
        $this->__load();
        return parent::addGroup($group);
    }

    public function removeGroup(\FOS\UserBundle\Model\GroupInterface $group)
    {
        $this->__load();
        return parent::removeGroup($group);
    }

    public function __toString()
    {
        $this->__load();
        return parent::__toString();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'username', 'usernameCanonical', 'email', 'emailCanonical', 'enabled', 'salt', 'password', 'lastLogin', 'locked', 'expired', 'expiresAt', 'confirmationToken', 'passwordRequestedAt', 'roles', 'credentialsExpired', 'credentialsExpireAt', 'id', 'residence_tribe', 'destination_tribe', 'nationality', 'destination_city', 'destination_country', 'destination_region', 'residence_region', 'residence_city', 'residence_country', 'about_me', 'sex', 'premium', 'num_question', 'num_answer', 'visit_goal', 'occupation', 'language', 'residence_continent', 'destination_continent', 'image', 'facebookId');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}